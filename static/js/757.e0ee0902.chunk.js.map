{"version":3,"file":"static/js/757.e0ee0902.chunk.js","mappings":"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","sources":["components/LoadingComponent.js","../node_modules/react-bootstrap/esm/Button.js","components/Modal.js","components/Albums.js","data-containers/UsersList.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoadingComponent = ({ items }) => {\n  return (<p>Loading {items}...</p>)\n};\n\nLoadingComponent.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default LoadingComponent;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst ESCAPE_KEY = 27;\n\nconst modalRoot = document.getElementById(\"modal\");\nconst el = document.createElement('div');\nconst root = document.getElementById('root');\n\nconst Modal = ({ children, closeModal }) => {\n  const [modalElement, setModalEl] = useState();\n\n  const handleClickOutside = ({ target }) => {\n    if (modalElement === target) {\n      closeModal();\n    }\n  };\n\n  const handleKeyDown = ({ keyCode }) => {\n    if (keyCode === ESCAPE_KEY && closeModal) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    modalRoot.appendChild(el);\n    if (closeModal) {\n      root?.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      modalRoot.removeChild(el);\n      if (closeModal) {\n        root?.removeEventListener('keydown', handleKeyDown);\n      }\n    }\n  }, []);\n\n  return ReactDOM.createPortal(\n    <div className=\"modal-box\" onClick={handleClickOutside} ref={(el) => setModalEl(el)}>\n      <div className='modal-content'>\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeModal}>&times;</button>\n\n        {children}\n      </div>\n    </div>\n    , modalRoot);\n}\n\nModal.propTypes = {\n  children: PropTypes.any,\n  closeModal: PropTypes.func,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport Modal from '../components/Modal';\nimport LoadingComponent from './LoadingComponent';\n\nconst Albums = ({ albums, status, error, closeModal }) => (\n  <Modal closeModal={closeModal}>\n    {status === 'loading' && <div className=\"text-center\"><LoadingComponent items=\"albums\" /></div>}\n\n    {status === 'failed' && <p>{error}</p>}\n\n    <h3 className=\"p-3 text-center\">Albums for the chosen user:</h3>\n\n    <ListGroup as=\"ol\" numbered className=\"p-3\">\n      {albums && albums?.length > 0 && albums.map(album => (\n        <ListGroup.Item key={album.id} as=\"li\" className=\"d-flex align-items-center\">\n          <p className=\"my-0 px-2\">{`${album.title.slice(0, 1).toUpperCase()}${album.title.slice(1)}`}</p>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n\n    <div className=\"d-flex justify-content-center p-3\">\n      <Button variant=\"primary\" className=\"w-25\" onClick={closeModal}>Close</Button>\n    </div>\n  </Modal>\n);\n\nAlbums.propTypes = {\n  albums: PropTypes.array,\n  status: PropTypes.string,\n  error: PropTypes.any,\n  closeModal: PropTypes.func,\n};\n\nexport default Albums;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Stack from 'react-bootstrap/Stack';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport Albums from '../components/Albums';\nimport LoadingComponent from '../components/LoadingComponent';\n\nimport { fetchUsers } from \"../redux/reducers/users\";\nimport { fetchAlbums, reset } from '../redux/reducers/albums';\n\nconst UserList = () => {\n  const [isModalShown, setShowModal] = useState(false);\n  const { users, status, error } = useSelector(state => state.users);\n  const albums = useSelector(state => state.albums);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (status !== 'loading' || users && users.length === 0) {\n      dispatch(fetchUsers());\n    }\n  }, [dispatch]);\n\n  const showModal = (userId) => {\n    dispatch(reset());\n    dispatch(fetchAlbums(userId));\n    setShowModal(true);\n  }\n\n  const closeModal = () => setShowModal(false);\n\n  return (\n    <Stack>\n      <div className=\"mx-auto\">\n        <h2 className='py-4 text-center'>Users list</h2>\n\n        {status === 'loading' && <LoadingComponent items=\"users\" />}\n\n        {status === 'failed' && <p>{error}</p>}\n\n        {status === 'success' && <ListGroup as=\"ol\" numbered>\n          {users && users?.length > 0 && users.map(user => (\n            <ListGroup.Item key={user.id} as=\"li\" className=\"d-flex align-items-center justify-content-between\">\n              <p className=\"my-0 px-2\">{user.name}</p>\n\n              <Stack gap={2} direction=\"horizontal\" className='ms-auto'>\n                <a href={`https://vmiracle13.github.io/proxysellertest/#/${user.id}/posts`} className=\"p-2 bg-secondary text-white rounded text-decoration-none\">Posts</a>\n                <Button variant=\"secondary\" onClick={() => showModal(user.id)}>Albums</Button>\n              </Stack>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>}\n\n        {isModalShown && (\n          <Albums {...albums} closeModal={closeModal} />\n        )}\n      </div>\n    </Stack >\n  );\n};\n\nexport default UserList;\n"],"names":["_ref","items","_jsxs","children","Button","React","ref","as","bsPrefix","_ref$variant","variant","size","_ref$active","active","_ref$disabled","disabled","className","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_useButtonProps","useButtonProps","_objectSpread","tagName","_useButtonProps2","_slicedToArray","buttonProps","Component","_jsx","classNames","concat","href","displayName","modalRoot","document","getElementById","el","createElement","root","closeModal","_useState","useState","_useState2","modalElement","setModalEl","handleKeyDown","_ref3","keyCode","useEffect","appendChild","addEventListener","removeChild","removeEventListener","ReactDOM","onClick","_ref2","target","type","albums","status","error","Modal","LoadingComponent","ListGroup","numbered","length","map","album","Item","title","slice","toUpperCase","id","isModalShown","setShowModal","_useSelector","useSelector","state","users","dispatch","useDispatch","fetchUsers","Stack","user","name","gap","direction","userId","reset","fetchAlbums","Albums"],"sourceRoot":""}